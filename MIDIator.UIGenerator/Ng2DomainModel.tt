<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="MIDIator.UIGenerator.Consumables" #>
<#@ import namespace="Sanford.Multimedia.Midi" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="MIDIator.Engine" #>
<#@ import namespace="TypeLite" #> 
<#@ import namespace="TypeLite.Net4" #> 
<#@output extension=".ts"#>
<#@ parameter type="System.Collections.Generic.List<Assembly>" name="Assemblies" #>
<#
var ts = TypeScript.Definitions()
		.ForAssemblies(Assemblies)
		.WithVisibility((tsClass, name) => true)
		.WithMemberFormatter(identifier => identifier.Name.ToCamelCase());
#>
<#= ts.Generate() #>